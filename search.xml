<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/05/hello-world/"/>
      <url>/2022/03/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>01.列表</title>
      <link href="/2019/07/28/python%E5%9F%BA%E7%A1%80/01-%E5%88%97%E8%A1%A8/"/>
      <url>/2019/07/28/python%E5%9F%BA%E7%A1%80/01-%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="01-列表常用方法"><a href="#01-列表常用方法" class="headerlink" title="01.列表常用方法"></a>01.列表常用方法</h2><h3 id="1-1-append"><a href="#1-1-append" class="headerlink" title="1.1 append"></a>1.1 append</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. append用于在列表末尾追加新的对象</span></span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a.append(<span class="number">4</span>)                          <span class="comment">#the result ： [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><h3 id="1-2-count"><a href="#1-2-count" class="headerlink" title="1.2 count"></a>1.2 count</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2. count方法统计某个元素在列表中出现的次数</span></span><br><span class="line">a = [<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;bb&#x27;</span>,<span class="string">&#x27;cc&#x27;</span>,<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;aa&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(a.count(<span class="string">&#x27;aa&#x27;</span>))                 <span class="comment">#the result ： 3</span></span><br></pre></td></tr></table></figure><h3 id="1-3-extend"><a href="#1-3-extend" class="headerlink" title="1.3 extend"></a>1.3 extend</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3. extend方法可以在列表的末尾一次性追加另一个序列中的多个值</span></span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">b = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">a.extend(b)                          <span class="comment">#the result ：[1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h3 id="1-4-index"><a href="#1-4-index" class="headerlink" title="1.4 index"></a>1.4 index</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#4. index函数用于从列表中找出某个值第一个匹配项的索引位置</span></span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(a.index(<span class="number">1</span>))                   <span class="comment">#the result ： 0</span></span><br></pre></td></tr></table></figure><h3 id="1-5-insert"><a href="#1-5-insert" class="headerlink" title="1.5 insert"></a>1.5 insert</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#5. insert方法用于将对象插入到列表中</span></span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a.insert(<span class="number">0</span>,<span class="string">&#x27;aa&#x27;</span>)            <span class="comment">#the result : [&#x27;aa&#x27;, 1, 2, 3]</span></span><br></pre></td></tr></table></figure><h3 id="1-6-pop"><a href="#1-6-pop" class="headerlink" title="1.6 pop"></a>1.6 pop</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#6. pop方法会移除列表中的一个元素（默认是最后一个），并且返回该元素的值</span></span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a.pop()                             <span class="comment">#the result ： [1, 2]</span></span><br><span class="line">a.pop(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="1-7-remove"><a href="#1-7-remove" class="headerlink" title="1.7 remove"></a>1.7 remove</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#7. remove方法用于移除列表中某个值的第一个匹配项</span></span><br><span class="line">a = [<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;bb&#x27;</span>,<span class="string">&#x27;cc&#x27;</span>,<span class="string">&#x27;aa&#x27;</span>]</span><br><span class="line">a.remove(<span class="string">&#x27;aa&#x27;</span>)                      <span class="comment">#the result ： [&#x27;bb&#x27;, &#x27;cc&#x27;, &#x27;aa&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="1-8-reverse"><a href="#1-8-reverse" class="headerlink" title="1.8 reverse"></a>1.8 reverse</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#8. reverse方法将列表中的元素反向存放</span></span><br><span class="line">a = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">a.reverse()                         <span class="comment">#the result ： [&#x27;c&#x27;, &#x27;b&#x27;, &#x27;a&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="1-9-sort"><a href="#1-9-sort" class="headerlink" title="1.9 sort"></a>1.9 sort</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#9. sort方法用于在原位置对列表进行排序，意味着改变原来的列表，让其中的元素按一定顺序排列</span></span><br><span class="line">a = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a.sort()                           <span class="comment">#the result ：[1, 2, 3, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="1-10-enumerate"><a href="#1-10-enumerate" class="headerlink" title="1.10 enumerate"></a>1.10 enumerate</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>]</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(li, <span class="number">1</span>):  <span class="comment"># 1.代表 k 从哪个数字开始</span></span><br><span class="line">    <span class="built_in">print</span>(k,v)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1 11</span></span><br><span class="line"><span class="string">2 22</span></span><br><span class="line"><span class="string">3 33</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="1-11-range和xrange"><a href="#1-11-range和xrange" class="headerlink" title="1.11 range和xrange"></a>1.11 range和xrange</h3><ul><li>指定范围，生成指定的数字</li><li>注：python3中的range类似python2中的xrange，比如a &#x3D; range(1,4) : a返回的不是列表对象而是一个可迭代对象（&lt;class ‘range’&gt;）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、range根据start与stop指定的范围以及step设定的步长，生成一个序列：range([start,] stop[, step])</span></span><br><span class="line"><span class="comment">#2、xrange 用法与 range 完全相同，所不同的是生成的不是一个list对象，而是一个生成器</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h3 id="1-12-列表去空"><a href="#1-12-列表去空" class="headerlink" title="1.12 列表去空"></a>1.12 列表去空</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 法1：</span></span><br><span class="line"><span class="built_in">filter</span>(<span class="literal">None</span>, your_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 法2：</span></span><br><span class="line"><span class="keyword">while</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">in</span> your_list:</span><br><span class="line">    your_list.remove(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 法3：</span></span><br><span class="line">your_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> your_list <span class="keyword">if</span> x != <span class="string">&#x27;&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="02-元祖"><a href="#02-元祖" class="headerlink" title="02.元祖"></a>02.元祖</h2><ul><li><strong>元组定义：</strong>元组和列表一样，也是一种序列，唯一的不同是元组不能修改。</li></ul><h3 id="2-1-创建元组"><a href="#2-1-创建元组" class="headerlink" title="2.1 创建元组"></a>2.1 创建元组</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 创建元组</span></span><br><span class="line">a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="comment">#2. 将列表转换成元组</span></span><br><span class="line"><span class="built_in">tuple</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])                                    <span class="comment">#the result ： (1, 2, 3, 4)</span></span><br></pre></td></tr></table></figure><h3 id="2-2-列表和元组常用函数"><a href="#2-2-列表和元组常用函数" class="headerlink" title="2.2 列表和元组常用函数"></a>2.2 列表和元组常用函数</h3><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>com(x,y)</td><td>比较两个值</td></tr><tr><td>len(seq)</td><td>返回序列的长度</td></tr><tr><td>list(seq)</td><td>把序列转换成列表</td></tr><tr><td>max(args)</td><td>返回序列或者参数集合中得最大值</td></tr><tr><td>min(args)</td><td>返回序列或者参数集合中的最小值</td></tr><tr><td>reversed(seq)</td><td>对序列进行反向迭代</td></tr><tr><td>sorted(seq)</td><td>返回已经排列的包含seq 所有元素的列表</td></tr><tr><td>tuple(seq)</td><td>把序列转换成元组</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python基础 </tag>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.字符串</title>
      <link href="/2019/07/28/python%E5%9F%BA%E7%A1%80/02-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2019/07/28/python%E5%9F%BA%E7%A1%80/02-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="01-字符串常用方法"><a href="#01-字符串常用方法" class="headerlink" title="01.字符串常用方法"></a>01.字符串常用方法</h2><h3 id="1-1-find方法"><a href="#1-1-find方法" class="headerlink" title="1.1 find方法"></a>1.1 <code>find</code>方法</h3><ul><li><code>作用：</code>find方法可以在一个较长的字符串中查找子串，他返回子串所在位置的最左端索引，如果没有找到则返回-1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;abcdefghijk&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a.find(<span class="string">&#x27;abc&#x27;</span>))                         <span class="comment">#the result ： 0</span></span><br><span class="line"><span class="built_in">print</span>(a.find(<span class="string">&#x27;abc&#x27;</span>,<span class="number">10</span>,<span class="number">100</span>))                    <span class="comment">#the result ： 11  指定查找的起始和结束查找位置</span></span><br></pre></td></tr></table></figure><h3 id="1-2-join方法"><a href="#1-2-join方法" class="headerlink" title="1.2 join方法"></a>1.2 <code>join</code>方法</h3><ul><li><code>作用：</code>join方法是非常重要的字符串方法，他是split方法的逆方法，用来连接序列中的元素，并且需要被连接的元素都必须是字符串。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;+&#x27;</span>.join(a))                                    <span class="comment">#the result ： 1+2+3</span></span><br></pre></td></tr></table></figure><h3 id="1-3-split方法"><a href="#1-3-split方法" class="headerlink" title="1.3 split方法"></a>1.3 <code>split</code>方法</h3><ul><li><code>作用：</code>这是一个非常重要的字符串，它是join的逆方法，用来将字符串分割成序列</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;1+2+3+4&#x27;</span>.<span class="title function_">split</span>(<span class="string">&#x27;+&#x27;</span>))                            #the result ： [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="1-4-strip"><a href="#1-4-strip" class="headerlink" title="1.4 strip"></a>1.4 strip</h3><ul><li><code>作用：</code>strip 方法返回去除首位空格（不包括内部）的字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;   test   test    &quot;</span>.strip())                <span class="comment">#the result ：“test   test”</span></span><br></pre></td></tr></table></figure><h3 id="1-5-replace"><a href="#1-5-replace" class="headerlink" title="1.5 replace"></a>1.5 replace</h3><ul><li><code>作用：</code>replace方法返回某字符串所有匹配项均被替换之后得到字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;This is a test&quot;</span>.replace(<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;is_test&#x27;</span>))     <span class="comment">#the result ： This_test is_test a test</span></span><br></pre></td></tr></table></figure><h3 id="1-6-首字母大写"><a href="#1-6-首字母大写" class="headerlink" title="1.6 首字母大写"></a>1.6 首字母大写</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;aBdkndfkFFD&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.capitalize()</span><br><span class="line"><span class="string">&#x27;Abdkndfkffd&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="1-7-Pinyin-模块，将汉字转换成拼音"><a href="#1-7-Pinyin-模块，将汉字转换成拼音" class="headerlink" title="1.7 Pinyin 模块，将汉字转换成拼音"></a>1.7 Pinyin 模块，将汉字转换成拼音</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> xpinyin <span class="keyword">import</span> Pinyin</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    p = Pinyin()</span><br><span class="line">    fullname = raw_input(<span class="string">&#x27;name：&#x27;</span>).strip()</span><br><span class="line">    fullname = fullname.decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span> fullname</span><br><span class="line">    xin = fullname[<span class="number">0</span>]</span><br><span class="line">    ming = fullname[<span class="number">1</span>:]</span><br><span class="line">    name = ming + <span class="string">&#x27;.&#x27;</span> + xin</span><br><span class="line">    username = p.get_pinyin(name, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span> username</span><br><span class="line">    <span class="built_in">print</span> username + <span class="string">&#x27;@yiducloud.cn&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="02-字符串格式化"><a href="#02-字符串格式化" class="headerlink" title="02.字符串格式化"></a>02.字符串格式化</h2><h3 id="2-1-使用百分号（-）字符串格式化"><a href="#2-1-使用百分号（-）字符串格式化" class="headerlink" title="2.1 使用百分号（%）字符串格式化"></a>2.1 使用百分号（%）字符串格式化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">100</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%d to hex is %x&quot;</span> %(num, num))        <span class="comment">#100 to hex is 64</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%d to hex is %#x&quot;</span> %(num, num))       <span class="comment">#100 to hex is 0x64</span></span><br></pre></td></tr></table></figure><h3 id="2-2-使用format字符串格式化"><a href="#2-2-使用format字符串格式化" class="headerlink" title="2.2 使用format字符串格式化"></a>2.2 使用format字符串格式化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 位置参数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;0&#125; is &#123;1&#125; years old&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;tom&quot;</span>, <span class="number">28</span>))            <span class="comment">#tom is 28 years old</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; is &#123;&#125; years old&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;tom&quot;</span>, <span class="number">28</span>))             <span class="comment">#tom is 28 years old</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hi, &#123;0&#125;! &#123;0&#125; is &#123;1&#125; years old&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;tom&quot;</span>, <span class="number">28</span>))      <span class="comment">#Hi, tom! tom is 28 years old</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 关键字参数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;name&#125; is &#123;age&#125; years old&quot;</span>.<span class="built_in">format</span>(name = <span class="string">&quot;tom&quot;</span>, age = <span class="number">28</span>))    <span class="comment">#tom is 28 years old</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 下标参数</span></span><br><span class="line">li = [<span class="string">&quot;tom&quot;</span>, <span class="number">28</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;0[0]&#125; is &#123;0[1]&#125; years old&quot;</span>.<span class="built_in">format</span>(li))          <span class="comment">#tom is 28 years old</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python基础 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
